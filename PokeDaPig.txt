frameRate(60);
/**
 * 
 * 
 * I FIXED THE GAME BREAKING BUG!!! AFTER 2 WHOLE YEARS!!!!!!!! WOOOOOOOOOOO
 * 
 * 
 * 
 * 
 * 
 * I don't know why I made this. *MADE 2 YEARS AGO*
 * 
 * 
 * 
 * I'm not improving this anytime soon. 
 * Mainly because I jave to be working on my rocket shipo game's beta. ;)
 * 
 */ 
var betatester = false;
//
//If are beta-testing, please tell me what you think in the Tips/Thanks

/**Update Progress: 67%
 * Debugs........done
 * Better Help...done
 * More Buttons..2%
*/
/**NextUpdate Progress: 12%
 * 
 * 
 * */
//NEXT BIG UPDATE: XXX
//Big Update: Debugs/Better Help/"Revive" and "Eat" button
//NextUpdate: Weapons Shop

//Updated stuff
//Shop- buyable stuff
//Help and change weapon button

//700+ lines of code!!!

var weapon = "meelee";
/**
 * Weapon Guide (var weapon = *var*;)
 *      *var*       *weapon*
 *      "meelee"     sword (stick)
 *      "gun"        gun   (in Progress)
 *      "orbital"    orbital strike
 *              WARNING: Orbital Strike is overpowered, uses too much energy, and doesn't give much bacon. Though it is awesome.
 * */
var mono = createFont("monospace");
var arie = createFont("ariel");
var item = "";
var end = "";
var end2 = "";
var end3 = 0;
var letters = 0;
var bleed = false;
var state = 1;
var bacon = 0;
var x = 250;
var y = 50;
var yu = true;
var load = 100;
var load2 = 0;
var bx = [];    //bullet X
var be = [];    //bullet explosion (X)
var bc = [];    //bullet explosion color
var bc2 = [0];  //bullet explosion after color
var bs = 0;     //bullet shot?
var healtime = 0;//time left until pig is healed.
var en = 200;   //energy
var me = 350;
var introed = false;
var size2 = 10;
var b = {
    x: [],
    y: [],
    xs: [],
    ys: [],
    num: 0,
};
for(var i = 0; i < 50; i ++){
    b.x.push(-100);
    b.y.push(500);
    b.xs.push(0);
    b.ys.push(0);
}
var time = {
    s: second(),
    sl: 0,
    m: minute(),
    h: hour(),
    d: day(),
};
var bea = 0;
var shopItem = [false, false, 0, 0];
var timeUpdate = function(){
    time.s = second();
    time.m = minute();
    time.h = hour();
    time.d = day();
    time.sl = 0;
    time.sl = (second() + minute() * 60 + (hour() * 60) * 60 + ((day() * 60) * 60) * 24);
};
var nextUpdate = {
    d: 2,
    h: 19,
    m: 5,
    s: 5,
    sl: 0,
};
nextUpdate.sl = (nextUpdate.s + nextUpdate.m * 60 + (nextUpdate.h * 60) * 60 + ((nextUpdate.d * 60) * 60) * 24);
var p = {       //pig
    hp: 200,    //health
    iq: 1000,   //intelligence     (Not In Use)
    fa: 2,      //fatness (reward) (Not In Use)
    x: 200,     //pig X
    y: 0,       //pig Y
    xs: 0,      //x-speed
    ys: 0,      //y-speed
    mh: 200,    //max health
};
var keyPressed = function(){
    if(keyCode === 32 && bacon >= 1 && en < me){
        bacon = bacon - 1;
        bea = bea - 1;
        en = en + 1;
    }
    if(keyCode === 49 && bacon >= 50 && p.hp <= 0){
        bacon = bacon - 50;
        bea = bea - 50;
        healtime = 0;
    }
};
var clicks = 0;
var mousePressed = function(){
    if(state === 2){
        if(dist(mouseX, mouseY, 330, 30) <= 15){
            introed = false;
        }
        if(dist(mouseX, mouseY, 370, 30) <= 15){
            state = 3;
        }
        if(dist(mouseX, mouseY, 280, 30) <= 25){
            state = 4;
            end = "Welcome to the\nWeapon Shop!";
            letters = 0;
        }
    }
    if(state === 3){
        for(var i = 2; i < 5; i ++){
            if(dist(mouseX, mouseY, 25, (145 + (i * 50))) <= 12.5){
                switch(i){
                    case 2:
                        if(bacon >= 450){
                            bacon = bacon - 450;
                            bea = bea - 450;
                            en = en + 500;
                        }
                        break;
                    case 3:
                        if(bacon >= 1000){
                            bacon = bacon - 1000;
                            bea = bea - 1000;
                            p.mh = p.mh + 50;
                        }
                        break;
                    case 4:
                        if(bacon >= 500){
                            bacon = bacon - 500;
                            bea = bea - 500;
                            me = me + 50;
                        }
                }
            }
        }
    }
};
var gravity = function(grav){
    if(p.y > 0 || p.ys > 0){
        p.ys = p.ys * grav;
    }
    else{
        p.ys = p.ys - 1;
    }
    if(p.y < 310 && p.ys < 1){
        p.ys = 1;
    }
    grav = grav - 1;
};
var move = function(){
    p.x = p.x + p.xs;
    p.y = p.y + p.ys;
    if(p.y > 310){
        p.ys = p.ys - ((p.ys * 2) - p.ys / 1.5);
        if(p.ys >= 10){
            p.y = 290;
            p.ys = 1;
            p.x = 200;
        }
    }
    if(p.x <= 40){
        p.xs = p.x + ((p.xs * 2) - p.xs / 1.9);
        p.ys = p.y - p.ys / 1.3;
    }
    if(p.x >= 360){
        p.xs = p.xs - ((p.xs * 2) + p.xs / 1.9);
        p.ys = p.ys - p.ys / 1.3;
    }
    if(p.y <= -10){
        p.ys = p.ys + 1;
    }
};
var reset = function(){
    if(p.x <= 0 || p.x >= 400){
        p.x = 200;
        p.y = 10;
        p.ys = 1;
    }
};
var airDrag = function(){
    p.xs = p.xs * 0.85;
    if(p.ys < 0){
        p.ys = p.ys * 0.85;
    }
};
var pig = function(x, y, hp){
    fill(252, 215, 222);
    stroke(0, 0, 0);
    strokeWeight(5);
    ellipse(x, y, 77.5, 77.5);
    if(hp > 0){
        strokeWeight(3);
        noFill();
        arc(x - 15, y, 20, 20, 230, 310);
        arc(x + 15, y, 20, 20, 230, 310);
    }
    else{
        strokeWeight(3);
        line(x - 15, y - 10, x - 5, y);
        line(x - 15, y, x - 5, y - 10);
        line(x + 15, y - 10, x + 5, y);
        line(x + 15, y, x + 5, y - 10);
    }
    fill(232, 195, 202);
    strokeWeight(1.5);
    stroke(182, 145, 152);
    ellipse(x, y + 15, 50, 25);
    fill(0, 0, 0);
    stroke(0, 0, 0);
    ellipse(x - 10, y + 15, 10, 15);
    ellipse(x + 10, y + 15, 10, 15);
    
};
if(betatester === true){
    bacon = 9999;
    bea = 9999;
    en = 99999;
    me = 99999;
    state = 2;
}
var draw = function() {
    switch(state){
        case 0:
            //logo
        break;
        case 1:
            background(255, 255, 255);
            fill(0, 0, 0);
            textSize(40);
            text("Poke the Pig", 70, 50);
            if(load <= 0){
                load = 0;
            }
            bs = round(random(1, 4));
            if(bs === 2){
                bx.push(400);
                bs = 0;
            }
            for(var i=0; i<bx.length; i++){
                fill(89, 89, 89);
                noStroke();
                ellipse(bx[i], 200, 15, 7.5);
                rect(bx[i], 200 - 7.5 / 2, 7.5, 7.5);
                bx[i] -= 3;
                if(dist(x, 200, bx[i], 200) <= 40){
                    x = x - random(0.5, 3);
                    load = load - 3;
                    bx[i] = -100;
                    be.push(x + 40);
                    bc.push(255);
                    if(bc2.length-1 < 100){
                        bc2.push((bc2.length-1));
                    }
                    else{
                        bc2.push(100);
                    }
                }
                if(bc[i] > -190){
                    fill(bc[i], bc[i], 0);
                    bc[i] = bc[i] - 5;
                }
                else{
                    fill(255 - bc2[i] * 2.55);
                }
                ellipse(be[i] + 5, 200, 10, 10);
            }
            noStroke();
            fill(255, 255, 255);
            rect(0, 100, 20, 200);
            pig(x, 200, load);
            fill(200, 200, 200);
            rect(350, 190, 60, 20);
            rect(390, 210, 20, 30);
            fill(0, 255, 0);
            rect(x - 40, 120, load, 20);
            if(load <= 0){
                load2 ++;
                if(load2 >= 50){
                    state = 2;
                }
            }
        break;
        case 2:
            if(introed === false){
                println("Welcome to Poke the Pig!\nHere you just tourture the pig.\nClick/Hold the mouse to use a sword(stick).\nWatch out! The pig will jump around and bounce off the walls when you attack it!\n\nPress [spacebar] to eat 1 bacon and regain some energy.\nPress 1 and you will instant revive the pig at the cost of 50 bacon.\n\nClick on the\"Help\" button and this will show up again.\nClick the \"Shop\" button and you will enter the shop.\nAt the shop you can buy stuff that help you in the game or extras.\n\n\nNOTE: hacking is not allowed. You might as well be a beta-tester.\n\n\nDon't forget to Vote up!\nGood Luck!\n\n           ~The Developer, Thomas Li");
                introed = true;
            }
            background(255, 255, 255);
            strokeWeight(2.7);
            stroke(0, 0, 0);
            if(dist(mouseX, mouseY, 370, 30) <= 15){
                fill(120);
            }
            else{
                fill(150);
            }
            ellipse(370, 30, 30, 30);
            if(dist(mouseX, mouseY, 330, 30) <= 15){
                fill(120);
            }
            else{
                fill(150);
            }
            ellipse(330, 30, 30, 30);
            if(shopItem[1] === true){
                if(dist(mouseX, mouseY, 280, 30) <= 25){
                    fill(120);
                }
                else{
                    fill(150);
                }
                ellipse(280, 30, 50, 50);
            }
            noStroke();
            fill(138, 99, 0);
            rect(0, 350, 400, 30);
            rect(80, 350, 40, 50);
            rect(180, 350, 40, 50);
            rect(280, 350, 40, 50);
            pig(p.x, p.y, p.hp);
            fill(0, 0, 0);
            textSize(15);
            text("Bacon: "+bacon+"\nEnergy: "+en.toFixed(0)+"\n\n\n\nPigX: "+p.x.toFixed(1)+"\nPigY: "+p.y.toFixed(1)+"\nHealth: "+p.hp, 30, 50);
            if(p.hp <= 0){
                text("Time Left: "+(round((healtime-(healtime*2))/10)), 30, 200);
            }
            textSize(10);
            text("help", 320, 35);
            text("shop", 360, 35);
            gravity(1.284);
            move();
            airDrag();
            reset();
            if(p.hp <= 0){
                if(healtime >= 15){
                    healtime = -500;
                }
                if(healtime <= 0){
                    fill(0, 0, 0);
                    text("Press [1] to instant revive.", 150, 50);
                }
            }
            fill(255, 255, 255);
            ellipse(280, 31, 48, 48);
            fill(0, 0, 0);
            text("Weapon\n  Shop", 262, 27);
            switch(weapon){
                case "meelee":
                    if(mouseIsPressed && en > 0){
                        noCursor();
                        fill(255, 255, 255);
                        triangle(mouseX, mouseY, mouseX, mouseY + 15, mouseX + 10, mouseY + 10);
                        quad(mouseX, mouseY + 15, mouseX + 10, mouseY + 10, mouseX + 25, mouseY + 50, mouseX + 20, mouseY + 55);
                        if(dist(mouseX, mouseY, p.x, p.y) <= 40){
                            p.hp --;
                            p.xs = random(-25, 25);
                            if(mouseY > p.y){
                                p.ys = random(-5, -50);
                            }
                            if(p.hp > 0){
                                bacon = bacon + round(random(0, 4));
                                bea = bacon;
                            }
                            if(bleed === true){
                                b.num = round(random(0, 150));
                                b.x[b.num] = mouseX;
                                b.y[b.num] = mouseY;
                                b.xs[b.num] = random(-5, 5);
                                b.ys[b.num] = random(-3, 8);
                            }
                        }
                        en = en - 0.1;
                    }
                    else{
                        cursor();
                    }
                    break;
                case "orbital":
                    if(mouseY < 350){
                        stroke(255, 0, 0);
                        noFill();
                        if(mouseX >= p.x - 40 && mouseX <= p.x + 40 && mouseY <= p.y - 40){
                            line(mouseX, mouseY, mouseX, p.y - 40);
                            ellipse(mouseX, p.y - 40, 50, 25);
                            ellipse(mouseX, p.y - 40, 40, 15);
                            line(mouseX - 35, p.y - 40, mouseX + 35, p.y - 40);
                        }
                        else{
                            line(mouseX, mouseY, mouseX, 350);
                            ellipse(mouseX, 350, 50, 25);
                            ellipse(mouseX, 350, 40, 15);
                            line(mouseX - 35, 350, mouseX + 35, 350);
                        }
                    }
                    if(mouseIsPressed && en >= (size2 / 7)){
                        for(var i=0; i<10; i++){
                            noStroke();
                            fill(0, random(0, 255), random(0, 255));
                            ellipse(random(mouseX - size2, mouseX + size2), mouseY + random(0, 400), random(0, 10), random(0, 10));
                        }
                    }
                        stroke(0, 0, 0);
                        fill(99, 99, 99);
                        triangle(mouseX - 15, mouseY, mouseX + 15, mouseY, mouseX, mouseY + 20);
                        arc(mouseX, mouseY, 60, 20, 155, 380);
                    if(mouseIsPressed && en >= (size2 / 7)){
                        en = en - round(size2 / 7);
                        size2 = random(5, 20);
                        fill(0, random(0, 255), random(100, 255));
                        stroke(0, random(0, 255), random(100, 255));
                        strokeWeight(size2 / random(0.5, 5.5));
                        rect(mouseX - (size2 / 2), mouseY, size2, 400);
                        strokeWeight(1);
                        stroke(0, 0, 0);
                        fill(0, random(100, 255), random(100, 255), 50);
                        triangle(mouseX - 15, mouseY, mouseX + 15, mouseY, mouseX, mouseY + 20);
                        fill(random(0, 255));
                        arc(mouseX, mouseY, 60, 20, 155, 380);
                        if(dist(p.x, p.y, mouseX, p.y) <= (40 + size2 / 2) && p.y > mouseY){
                            p.x = random(-10, 10);
                            p.y = random(-10, 0);
                            p.hp = p.hp - round(size2 / 1.1);
                            bacon = bacon + round(size2 / 2);
                            bea = bacon;
                        }
                    }
                    break;
                case "gun":
                    
            }
            for(var i = 0; i < 150; i ++){
                b.x[i] = b.x[i] + b.xs[i];
                b.y[i] = b.y[i] + b.ys[i];
                if(b.ys[i] <= 1){
                    b.ys[i] = b.ys[i] / 1.2;
                    b.ys[i] = b.ys[i] + 0.2;
                }
                else{
                    b.ys[i] = b.ys[i] * 1.24;
                }
                if(b.x[i] >= 0 && b.x[i] <= 400 && b.y[i] >= 0 && b.y[i] <= 400){
                    fill(255, 0, 0);
                    noStroke();
                    ellipse(b.x[i], b.y[i], 5, 5);
                }
                if(b.y[i] <= 0){
                    b.y[i] = 500;
                    b.x[i] = 890;
                }
            }
        break;
        case 3:
            background(255, 255, 255);
            fill(110, 85, 0);
            stroke(160, 125, 0);
            rect(0, 0, 150, 40);
            rect(150, 0, 250, 40);
            rect(0, 40, 400, 40);
            fill(90, 65, 0);
            rect(0, 40, (en / me) * 400, 25);
            fill(160, 125, 0);
            rect(0, 65, 400, 345);
            stroke(0, 0, 0);
            strokeWeight(2.7);
            if(dist(mouseX, mouseY, 335, 365) <= 15){
                fill(120);
                if(mouseIsPressed){
                    state = 2;
                }
            }
            else{
                fill(150);
            }
            ellipse(335, 365, 30, 30);
            for(var i = 0; i < 5; i ++){
                if(dist(mouseX, mouseY, 25, 145 + (i * 50)) <= 12.5){
                    fill(120);
                    if(mouseIsPressed){
                        switch(i){
                            case 0:
                                if(shopItem[0] === false){
                                    if(bacon >= 500){
                                        bea = bea - 500;
                                        bacon = bacon - 500;
                                        bleed = true;
                                        shopItem[0] = true;
                                    }
                                    else{
                                        fill(255, 0, 0);
                                    }
                                }
                                break;
                            default:
                            
                        }
                    }
                }
                else{
                    fill(150);
                }
                ellipse(25, 145 + (i * 50), 25, 25);
            }
            
            fill(0, 0, 0);
            textSize(20);
            text("~SHOP~", 30, 30);
            textSize(15);
            text("Bacon: "+bacon, 200, 30);
            text("Energy: "+round(en)+"/"+me, 100, 58);
            text("Press [space] to eat bacon and gain energy.", 50, 110);
            textSize(12);
            text("Bleeding Pig: 500 bacon", 50, 150);
            text("XXXXXXXXXXXXXXXXXXX", 50, 200);
            text("Energy 500-pack: 450 bacon", 50, 250);
            text("Fatter Pig (more health): 1k bacon\nPig Health: "+p.mh, 50, 300);
            text("More Max Energy: 500 bacon\nCurrent Max: "+me, 50, 350);
            textSize(10);
            text("back", 325, 370);
            for(var i = 0; i < 5; i ++){
                switch(i){
                    case 0:
                        if(shopItem[0]){
                            text("sold!", 15, 150 + (i * 50));
                        }else{
                            text("buy", 17, 150 + (i * 50));
                        }
                        break;
                    case 1:
                        if(shopItem[1] === true){
                            text("sold!", 15, 150 + (i * 50));
                        }
                        else{
                            text("buy", 15, 150 + (i * 50));
                        }
                        break;
                }
                text("buy", 17, 150 + (i * 50));
            }
            break;
        case 4:
            //background(0, 0, 0);
            strokeWeight(3);
            stroke(0, 155, 0);
            fill(0, 0, 0);
            rect(220, 50, 160, 320);
            rect(20, 50, 180, 280);
            strokeWeight(1.3);
            if(mouseX >= 20 && mouseX <= 200 && mouseY >= 340 && mouseY <= 370){
                fill(0, 120, 0);
                if(mouseIsPressed){
                    state = 2;
                }
            }
            rect(20, 340, 180, 30);
            fill(0, 255, 0);
            textFont(mono, 13);
            text(" > " + end.substring(0, letters) + end2, 240, 80);
            text(" > Knife\n\n > Orital Strike\n\n > Pistol\n\n"+mouseX+":"+mouseY, 40, 75);
            textSize(15);
            text(" > Back < ", 65, 360);
            textFont("arial", 15);
            if(mouseIsPressed){
                
            }
            end3 ++;
            if(end3 >= 10){
                end2 = "";
            }
            if(end3 >= 20){
                end2 = "|";
                end3 = 0;
            }
            for(var i = 0; i <= 20; i += 3){
                if(end3 === i){
                    letters ++;
                }
            }
    }
    /*//NEXT UPDATE in...
    timeUpdate();
    fill(255, 255, 255);
    stroke(0, 0, 0);
    strokeWeight(2);
    rect(10, 362.5, 290, 30);
    for(var i=0; i<30; i++){
        if(i <= 15){
            stroke(0 + (255 / 15 * i));
        }
        else{
            stroke(255 - (255 / 15 * (i - 15)));
        }
        line(10, 362.5 + i, (time.sl / nextUpdate.sl)*299, 362.5 + i);
    }
    fill(0, 0, 0);
    textSize(15);
    text("Next Big Update in "+(nextUpdate.d - time.d)+"d "+(23 - time.h)+"h "+(59 - time.m)+"m "+(59 - time.s)+"s", 30, 385);
    //text("BIG UPDATE IS OUT!!!", 30, 385);*/
    healtime ++;
    if(healtime >= 0 && healtime <= 10){
        p.hp = p.mh;
        p.x = 200;
        p.y = -50;
    }
    if(yu === true){
        y --;
        if(y <= 15){
            yu = false;
        }
    }
    else{
        y ++;
        if(y >= 30 && state !== 1){
            yu = true;
        }
        if(state === 1 && y >= 19){
            yu = true;
        }
        if(state === 3 && y >= 20){
            yu = true;
        }
    }
/**if(betatester === false){
    if(shopItem[0] !== true && bleed === true){
        state = 75;
    }
    if(shopItem[1] !== true && weapon === "orbital"){
        state = 76;
    }
    if(bea !== bacon){
        state = 77;
    }
    fill(0, 0, 0);
    switch(state){
        case 75: 
            background(255, 255, 255);
            text("ERROR 402: hacking \"bleeding pig\"\n\nNOTE: hacking is NOT allowed", 30, 30);
            break;
        case 76:
            background(255, 255, 255);
            text("ERROR 403: hacking \"orbital strike\"\n\nNOTE: hacking is NOT allowed", 30, 30);
            break;
        case 77:
            background(255, 255, 255);
            text("ERROR 560: hacking bacon\n\nNOTE: hacking is NOT allowed", 30, 30);
    }
    if(state >= 75){
        noLoop();
    }
}
    if(en >= me){
        en = me;
    }
    if(p.hp >= p.mh){
        p.hp = p.mh;
    }*/
};
